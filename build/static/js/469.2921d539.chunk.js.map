{"version":3,"file":"static/js/469.2921d539.chunk.js","mappings":"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","sources":["Slider_Comp.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Slider, { Settings } from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Panel, PanelType } from '@fluentui/react';\nimport { IoChevronForwardOutline, IoChevronBackOutline, IoCalendarOutline } from \"react-icons/io5\";\nimport \"./CSS/App.css\";\nimport SocialMediaIcon from \"./SocialMediaIcon\";\nimport EventPanel from './EventPanel';\n\nfunction Slider_Comp() {\n  const sliderRef = useRef<Slider | null>(null);\n  const [data, setData] = useState<any>(null);\n  const [slidesToShow, setSlidesToShow] = useState<number>(3);\n  const [slidesToScroll, setSlidesToScroll] = useState<number>(3);\n  const [currentSlide, setCurrentSlide] = useState<number>(0);\n  const GetserverUrl = 'https://eventservers.onrender.com/api/getData';\n  const [selectedEvent, setSelectedEvent] = useState<any>(null);\n\n  const [url, setUrl] = useState('');\n\n  const settings: Settings = {\n    dots: false,\n    speed: 500,\n    slidesToShow: slidesToShow,\n    slidesToScroll: slidesToScroll,\n    infinite: false,\n    autoplay: false,\n    autoplaySpeed: 1000,\n    beforeChange: (oldIndex: number, newIndex: number) => {\n      setCurrentSlide(newIndex);\n    }\n  };\n\n  const handleNext = () => {\n    if (sliderRef.current && currentSlide < data.length - settings.slidesToShow!) {\n      setCurrentSlide((prev) => prev + 1);\n      sliderRef.current.slickNext();\n    }\n  };\n\n  const handlePrev = () => {\n    if (sliderRef.current && currentSlide > 0) {\n      setCurrentSlide((prev) => prev - 1);\n      sliderRef.current.slickPrev();\n    }\n  };\n  const handleTitleClick = (newsItem: any) => {\n    setSelectedEvent(newsItem);\n    setUrl(`https://www.gruene-washington.de/Veranstaltungen/${newsItem?.Title}`);\n\n  };\n  const closePanel = () => {\n    setSelectedEvent(null);\n  }\n  const HTMLRenderer = ({ content }: any) => {\n\n    return (\n      <div\n       \n        dangerouslySetInnerHTML={{ __html: content }}\n      />\n    );\n  };\n  const CustomHeader = () => {\n    return (\n      <>\n        <div className=\"align-items-center d-flex justify-content-between w-100\">\n          <h3 className=\"m-0\">Event Details</h3>\n          <div className=\"Shareon align-items-baseline d-flex mb-0\">\n            <h6>Share :</h6>\n            <SocialMediaIcon platform=\"facebook\" postUrl={url} />\n            <SocialMediaIcon platform=\"twitter\" postUrl={url} />\n            <SocialMediaIcon platform=\"linkedin\" postUrl={url} />\n            <SocialMediaIcon platform=\"copy-link\" postUrl={url} />\n            <span className=\"svg__iconbox svg__icon--cross\" style={{ position: \"relative\", top: \"6px\" }} onClick={closePanel}></span>\n          </div>\n        </div>\n\n      </>\n    );\n  };\n\n  const replaceUrlsWithNewFormat = (inputString: any) => {\n    try {\n      const urlRegex = /href=\"[^\"]*SmartId\\s*=\\d+[^\"]*Item\\s*=[^\"]*\"|href=\"[^\"]*SmartID\\s*=\\d+[^\"]*item1\\s*=[^\"]*\"/gi;\n\n      let replacedString = inputString?.replace(urlRegex, (match: any) => {\n        let title;\n        if (match.includes('item1=')) {\n          title = match.split('item1=')[1]?.replace(/%20/g, '-');\n        } else if (match.includes('Item=')) {\n          title = match.split('Item=')[1]?.replace(/%20/g, '-');\n        } else {\n          return match;\n        }\n        return `href=\"https://gruene-washington.de/${title}\"`;\n      });\n\n      const urlPattern = /sites\\/GrueneWeltweit\\/washington\\/public\\//g;\n      const replacement = \"\";\n      replacedString = replacedString.replace(urlPattern, replacement);\n      return replacedString;\n    } catch (e) {\n      console.log(e);\n      return inputString; // Return the original string in case of error\n    }\n  }\n\n  const getPublicServerData = async (tableName: any) => {\n    let results: any = [];\n    try {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n\n      var raw = JSON.stringify({\n        \"table\": `${tableName}`\n      });\n\n      var requestOptions: any = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n\n\n      fetch(\"https://gruene-washington.de/SPPublicAPIs/getDataAll.php\", requestOptions)\n        .then(response => response.text())\n        .then((result: any) => {\n          result = JSON.parse(result)\n          results = result?.data\n          const sortedData = results.sort((a: any, b: any) => {\n            if (a.EventDate && b.EventDate) {\n              const dateA: any = new Date(a.EventDate);\n              const dateB: any = new Date(b.EventDate);\n              return dateB - dateA;\n            }\n            return 0; // If EventDate is missing in any of the objects, maintain the order\n          });\n          let finalData = sortedData.map((data: any) => {\n            if (data.Description) {\n\n              data.Description = replaceUrlsWithNewFormat(data.Description)\n            } return data;\n          })\n          setData(finalData);\n        })\n        .catch(error => console.log('error', error));\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n    return results;\n  }\n\n  useEffect(() => {\n\n    const tableName = \"events\"\n    const fetchData = async () => {\n      try {\n\n        const response: any = await getPublicServerData(`${tableName}`)\n      } catch (error) {\n        console.log(\"An error occurred while fetching data.\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        setSlidesToShow(1);\n        setSlidesToScroll(1);\n      } else if (window.innerWidth < 1200) {\n        setSlidesToShow(2);\n        setSlidesToScroll(2);\n      } else {\n        setSlidesToShow(3);\n        setSlidesToScroll(3);\n      }\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const formatDate = (dateString: any) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(\"en-GB\", {\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\",\n    });\n  };\n\n\n  return (\n    <div className=\"section NewsCardSection\">\n      <div className=\"container\">\n        <div className=\"section-header\">\n          <h2 className=\"sectionHeading\">Events</h2>\n          <div className=\"pull-right\">\n            <button onClick={handlePrev} className=\"button_color\" disabled={currentSlide === 0}>\n              <IoChevronBackOutline />\n            </button>\n            <button onClick={handleNext} className=\"button_color\" disabled={currentSlide === data?.length - settings.slidesToShow!}>\n              <IoChevronForwardOutline />\n            </button>\n          </div>\n        </div>\n        <Slider ref={sliderRef} {...settings}>\n          {data &&\n            data.map((item: any) => (\n              <div key={item.id} className=\"\">\n                <div className=\"card border-0\">\n                  <img className=\"card-img-top\" src={item?.ItemCover == \"\" ? \"https://gruene-washington.de/PublishingImages/Covers/Default_img.jpg\" : item?.ItemCover ?? \"https://gruene-washington.de/PublishingImages/Covers/Default_img.jpg\"} />\n\n                  <div className=\"card-body\">\n                    <div className=\"entry-meta\">\n                      <IoCalendarOutline />\n                      <span>\n                        {item?.EventDate ? formatDate(item?.EventDate) : ''}\n                      </span>\n                    </div>\n                    <h4 className=\"card-title\" onClick={() => handleTitleClick(item)}>\n                      <a> {item?.Title}</a>\n                    </h4>\n                    {item?.Description?.length > 0 && <>\n                      <div className=\"eventItemDesc cutoff-text\">\n                        <p>\n                          <HTMLRenderer content={item?.Description} />\n                        </p>\n                      </div>\n                      {!(item?.Description?.length <= 200) && <input className=\"expand-btn\" type=\"checkbox\" />}\n                    </>\n                    }\n\n                  </div>\n                </div>\n              </div>\n            ))}\n        </Slider>\n      </div>\n\n      {selectedEvent && (\n        <EventPanel selectedEvent={selectedEvent} onClose={closePanel} url={url} />\n\n      )}\n    </div>\n  );\n}\n\nexport default Slider_Comp;\n\n"],"names":["sliderRef","useRef","data","setData","useState","slidesToShow","setSlidesToShow","slidesToScroll","setSlidesToScroll","currentSlide","setCurrentSlide","selectedEvent","setSelectedEvent","url","setUrl","settings","dots","speed","infinite","autoplay","autoplaySpeed","beforeChange","oldIndex","newIndex","closePanel","HTMLRenderer","_ref","content","_jsx","dangerouslySetInnerHTML","__html","getPublicServerData","async","results","myHeaders","Headers","append","raw","JSON","stringify","concat","tableName","fetch","method","headers","body","redirect","then","response","text","result","_result","parse","finalData","sort","a","b","EventDate","dateA","Date","map","Description","inputString","urlRegex","replacedString","replace","match","title","includes","_match$split$","split","_match$split$2","urlPattern","replacement","e","console","log","replaceUrlsWithNewFormat","catch","error","useEffect","fetchData","handleResize","window","innerWidth","addEventListener","removeEventListener","_jsxs","className","children","onClick","handlePrev","current","prev","slickPrev","disabled","IoChevronBackOutline","handleNext","length","slickNext","IoChevronForwardOutline","Slider","_objectSpread","ref","item","_item$ItemCover","_item$Description","_item$Description2","dateString","src","ItemCover","IoCalendarOutline","toLocaleDateString","day","month","year","handleTitleClick","newsItem","Title","_Fragment","type","id","EventPanel","onClose"],"sourceRoot":""}